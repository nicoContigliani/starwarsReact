{"ast":null,"code":"var _jsxFileName = \"/home/nico/Desarrollo/React/ProyectosNico/startwars_nico_contigliani/src/components/User.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst User = () => {\n  _s();\n\n  const [per, setPer] = useState([]);\n  const [films, setFilms] = useState();\n  const [species, setSpecies] = useState();\n  const [starships, setStarships] = useState();\n  const [vehicles, setVehicles] = useState();\n  const {\n    id\n  } = useParams(); // console.log(id);\n  // console.log(id+\"esto viene por parametro\");\n\n  useEffect(() => {\n    getDatos();\n  }, []);\n\n  const getDatos = async () => {\n    try {\n      const req = await axios.get(`https://swapi.dev/api/people/${id}`);\n      const reqs = req.data;\n      setPer(reqs);\n    } catch (err) {\n      console.log(err);\n    }\n\n    const f = await per.films.map(item => item);\n    const fi = await f.join('  -  ');\n    setFilms(fi);\n    const s = await per.species.map(item => item);\n    const Si = await s.join('  -  ');\n    setSpecies(Si);\n    const n = await per.starships.map(item => item);\n    const Ni = await s.join('  -  ');\n    setStarships(Ni);\n    const v = await per.vehicles.map(item => item);\n    const Vi = await v.join('  -  ');\n    setVehicles(Vi);\n    console.log(per);\n  }; //  console.log(per);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Nombre: \", per.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 35\n      }, this), \"Cumplea\\xF1os: \", per.birth_year, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 40\n      }, this), \"Creado: \", per.created, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }, this), \"Editado: \", per.edited, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }, this), \"Color de ojos: \", per.eye_color, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 42\n      }, this), \"Color de pelo: \", per.hair_color, \"Color de piel: \", per.skin_color, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 12\n      }, this), \"Peliculas:  * \", films, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), \"Nave Estelar: \", starships, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 40\n      }, this), \"Vehiculo: \", per.vehicles, \"Especie: \", species, \"     \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }, this), \"Genero: \", per.gender, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(User, \"ZY/osRUF0kggsrDeoJvDp/qUd+I=\", false, function () {\n  return [useParams];\n});\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/home/nico/Desarrollo/React/ProyectosNico/startwars_nico_contigliani/src/components/User.jsx"],"names":["React","useEffect","useState","useParams","axios","BrowserRouter","Router","Switch","Route","Link","NavLink","User","per","setPer","films","setFilms","species","setSpecies","starships","setStarships","vehicles","setVehicles","id","getDatos","req","get","reqs","data","err","console","log","f","map","item","fi","join","s","Si","n","Ni","v","Vi","name","birth_year","created","edited","eye_color","hair_color","skin_color","gender"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from \"axios\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    NavLink\n} from \"react-router-dom\";\n\n\n\n\n\nconst User = () => {\n    const [per, setPer] = useState([])\n    const [films, setFilms] = useState()\n    const [species, setSpecies] = useState()\n    const [starships,setStarships]=useState()\n    const [vehicles,setVehicles]=useState()\n\n\n\n    const { id } = useParams();\n    // console.log(id);\n    // console.log(id+\"esto viene por parametro\");\n\n\n\n    useEffect(() => {\n        getDatos()\n    }, [])\n\n\n    const getDatos = async () => {\n\n\n\n        try {\n\n            const req = await axios.get(`https://swapi.dev/api/people/${id}`);\n            const reqs = req.data;\n            setPer(reqs)\n\n        } catch (err) {\n            console.log(err);\n        }\n\n        const f = await per.films.map((item,) => (\n            item\n        ))\n        const fi = await (f.join('  -  '));\n        setFilms(fi)\n\n        const s = await per.species.map((item,) => (\n            item\n        ))\n        const Si = await (s.join('  -  '));\n        setSpecies(Si)\n\n         \n        const n = await per.starships.map((item,) => (\n            item\n        ))\n        const Ni = await (s.join('  -  '));\n        setStarships(Ni)\n        const v = await per.vehicles.map((item,) => (\n            item\n        ))\n        const Vi = await (v.join('  -  '));\n        setVehicles(Vi)\n\n\n\n        console.log(per);\n    }\n    //  console.log(per);\n\n    return (\n        <div className=\"container\">\n\n            <div>\n                Nombre: {per.name}<br />\n           Cumplea√±os: {per.birth_year}<br />\n           Creado: {per.created}<br />\n           Editado: {per.edited}<br />\n           Color de ojos: {per.eye_color}<br />\n           Color de pelo: {per.hair_color}\n           Color de piel: {per.skin_color}\n           <br/>\n           Peliculas:  * {films}\n                <br/>\n             Nave Estelar: {starships} <br/>\n             Vehiculo: {per.vehicles}\n             Especie: {species}     <br/>\n             Genero: {per.gender} <br/>\n\n            </div>\n        </div>\n    )\n}\n\nexport default User\n"]},"metadata":{},"sourceType":"module"}